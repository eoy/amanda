/* =Global
----------------------------------------------- */
*, *:after, *:before {
  @include selection(white, black);
}

html {
  height: auto;
  min-height: 100%;
  position: relative;
  width: 100%;
}

body {
  @extend %basefont;
  background-color: $white;
  height: auto;
  margin: 0 auto;
  min-height: 340px;
  overflow-x: hidden;
  padding: 0;
  width: 100%;
  z-index: 1;
  &.mobileNav-open {
    position: fixed;
    width: 100%;
    height: 100%;
    max-width: 100%;
    max-height: 100%;
    overflow: hidden;
  }
}

main {
  position: relative;
}

section,
.section {
  width: 100%;
  display: block;
  position: relative;
}

figure {
  margin: 0;
  padding: 0;
}

.relative {
  position: relative;
}


// List styles
ul.inline,
ol.inline,
ul.ib,
ol.ib {
  > li {
    display: inline-block;
  }
}
.ib {
  display: inline-block;
}

ul {
  &.nostyle {
    list-style: none;
    margin: 0;
    padding: 0;
  }
}

.no-margin {
  margin: 0 !important;
}

// Row extensions
.full-width-row, .row--full-width {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  margin-top: 0;
  margin-bottom: 0;
  max-width: 100%;
  @include clearfix;
  position: relative;
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &.collapse {
    .column,
    .columns {
      padding: 0;
    }
  }
}

.row {
  &--small-max-width {
    max-width: 900px;
  }
  &--max-width {
    max-width: 1400px;
  }
  &--large-max-width {
    max-width: 1600px;
  }
}


// Equalizer fix for small
.remove-equalize-on-small {
  .remove-equalize & {
    height: inherit !important;
  }
}

//No outlines
a, input, textarea, button, select {
  &:focus {
    outline: none;
  }
}

// Negative Margin
.negative-margin-top {
  margin-top: -90px;
  position: relative;
  z-index: 2;
  &--large {
    margin-top: -180px;
    position: relative;
    z-index: 2;
  }
  &--x-large {
    margin-top: -400px;
    position: relative;
    z-index: 2;
  }
  @include mq(small) {
    margin-top: 0;
    &--large, &--x-large {
      margin-top: 0;
    }
  }
  @include mq(print) {
    margin-top: 0px;
  }
}

//Padding classes
.padding {
  padding: $column-gutter;
  &--tiny {
    padding: $column-gutter/4;
  }
  &--small {
    padding: $column-gutter/2;
  }
  &--large {
    padding: $column-gutter*2;
  }
  &--huge {
    padding: $column-gutter*4;
  }
  &--top {
    padding-top: $column-gutter;
    &--tiny {
      padding-top: $column-gutter/4;
    }
    &--small {
      padding-top: $column-gutter/2;
    }
    &--large {
      padding-top: $column-gutter*2;
    }
    &--huge {
      padding-top: $column-gutter*4;
    }
  }
  &--right {
    padding-right: $column-gutter;
    &--tiny {
      padding-right: $column-gutter/4;
    }
    &--small {
      padding-right: $column-gutter/2;
    }
    &--large {
      padding-right: $column-gutter*2;
    }
    &--huge {
      padding-right: $column-gutter*4;
    }
  }
  &--bottom {
    padding-bottom: $column-gutter;
    &--tiny {
      padding-bottom: $column-gutter/4;
    }
    &--small {
      padding-bottom: $column-gutter/2;
    }
    &--large {
      padding-bottom: $column-gutter*2;
    }
    &--huge {
      padding-bottom: $column-gutter*4;
    }
  }
  &--left {
    padding-left: $column-gutter;
    &--tiny {
      padding-left: $column-gutter/4;
    }
    &--small {
      padding-left: $column-gutter/2;
    }
    &--large {
      padding-left: $column-gutter*2;
    }
    &--huge {
      padding-left: $column-gutter*4;
    }
  }
  &--vertical {
    padding-top: $column-gutter;
    padding-bottom: $column-gutter;
    &--tiny {
      padding-top: $column-gutter/4;
      padding-bottom: $column-gutter/4;
    }
    &--small {
      padding-top: $column-gutter/2;
      padding-bottom: $column-gutter/2;
    }
    &--large {
      padding-top: $column-gutter*2;
      padding-bottom: $column-gutter*2;
    }
    &--huge {
      padding-top: $column-gutter*4;
      padding-bottom: $column-gutter*4;
    }
  }
  &--horizontal {
    padding-left: $column-gutter;
    padding-right: $column-gutter;
    &--tiny {
      padding-left: $column-gutter/4;
      padding-right: $column-gutter/4;
    }
    &--small {
      padding-left: $column-gutter/2;
      padding-right: $column-gutter/2;
    }
    &--large {
      padding-left: $column-gutter*2;
      padding-right: $column-gutter*2;
    }
    &--huge {
      padding-left: $column-gutter*4;
      padding-right: $column-gutter*4;
    }
  }
}


// Border classes
.border {
  border: 1px solid $borderColor;
  &--none {
    border: 0px solid transparent;
  }
  &--top {
    border-top: 1px solid $borderColor;
    &--none {
      border-top: 0px solid transparent;
    }
  }
  &--right {
    border-right: 1px solid $borderColor;
    &--none {
      border-right: 0px solid transparent;
    }
  }
  &--bottom {
    border-bottom: 1px solid $borderColor;
    &--none {
      border-bottom: 0px solid transparent;
    }
  }
  &--left {
    border-left: 1px solid $borderColor;
    &--none {
      border-left: 0px solid transparent;
    }
  }
}

// Table and table cell for vertical alignment
.table {
  display: table;
  height: 100%;
  width: 100%;
  &__cell {
    display: table-cell;
    vertical-align: middle;
  }
}

table {
  @include mq(print) {
    table-layout: fixed !important;
  }
}

// Spacer: is used with text-align: justify to get elements evenly positoned
.spacer {
  display: inline-block;
  width: 100%;
  height: 0px;
  padding: 0;
  margin: 0;
}
